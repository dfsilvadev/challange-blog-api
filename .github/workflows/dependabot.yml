name: Dependabot Security Updates

on:
  pull_request:
    branches: [ main ]
    # Executa apenas em PRs do dependabot
    if: github.actor == 'dependabot[bot]'

env:
  NODE_VERSION: '20'
  POSTGRES_USER: test_user
  POSTGRES_PASSWORD: test_password
  POSTGRES_DB: test_blog_db
  DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_blog_db

jobs:
  security-update:
    name: Security Update Validation
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U ${{ env.POSTGRES_USER }}; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
        
    - name: Run security audit
      run: yarn audit --audit-level moderate
      
    - name: Run tests
      run: yarn test:ci
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
        
    - name: Build application
      run: yarn build
      
    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'âœ… Security update validation completed successfully! All tests passed and build is working.'
          }) 